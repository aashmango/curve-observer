"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/lib/curveRendering.ts":
/*!***********************************!*\
  !*** ./app/lib/curveRendering.ts ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   drawControlPoints: function() { return /* binding */ drawControlPoints; },\n/* harmony export */   drawCurve: function() { return /* binding */ drawCurve; },\n/* harmony export */   drawGrid: function() { return /* binding */ drawGrid; }\n/* harmony export */ });\n/* harmony import */ var _curveCalculations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./curveCalculations */ \"(app-pages-browser)/./app/lib/curveCalculations.ts\");\n/* harmony import */ var _canvasUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./canvasUtils */ \"(app-pages-browser)/./app/lib/canvasUtils.ts\");\n\n\nfunction drawGrid(ctx, config) {\n    const { padding, xMin, xMax, yMin, yMax, dimensions } = config;\n    const { width, height } = dimensions;\n    // Save the current context state\n    ctx.save();\n    // Set up the grid style\n    ctx.strokeStyle = \"#e5e7eb\";\n    ctx.lineWidth = 1;\n    // Draw vertical grid lines\n    for(let x = Math.ceil(xMin); x <= xMax; x++){\n        const px = (0,_canvasUtils__WEBPACK_IMPORTED_MODULE_1__.transformX)(x, dimensions, config);\n        ctx.beginPath();\n        ctx.moveTo(px, padding);\n        ctx.lineTo(px, height - padding);\n        ctx.stroke();\n        // Draw x-axis labels\n        ctx.fillStyle = \"#6b7280\";\n        ctx.textAlign = \"center\";\n        ctx.fillText(x.toString(), px, height - padding + 20);\n    }\n    // Draw horizontal grid lines\n    for(let y = Math.ceil(yMin); y <= yMax; y++){\n        const py = (0,_canvasUtils__WEBPACK_IMPORTED_MODULE_1__.transformY)(y, dimensions, config);\n        ctx.beginPath();\n        ctx.moveTo(padding, py);\n        ctx.lineTo(width - padding, py);\n        ctx.stroke();\n        // Draw y-axis labels\n        ctx.fillStyle = \"#6b7280\";\n        ctx.textAlign = \"right\";\n        ctx.fillText(y.toString(), padding - 10, py);\n    }\n    // Draw axes\n    ctx.strokeStyle = \"#374151\";\n    ctx.lineWidth = 2;\n    // X-axis\n    const yAxis = (0,_canvasUtils__WEBPACK_IMPORTED_MODULE_1__.transformY)(0, dimensions, config);\n    ctx.beginPath();\n    ctx.moveTo(padding, yAxis);\n    ctx.lineTo(width - padding, yAxis);\n    ctx.stroke();\n    // Y-axis\n    const xAxis = (0,_canvasUtils__WEBPACK_IMPORTED_MODULE_1__.transformX)(0, dimensions, config);\n    ctx.beginPath();\n    ctx.moveTo(xAxis, padding);\n    ctx.lineTo(xAxis, height - padding);\n    ctx.stroke();\n    // Restore the context state\n    ctx.restore();\n}\nfunction drawCurve(ctx, curveType, parameters, config) {\n    const { padding, xMin, xMax, yMin, yMax, dimensions } = config;\n    const { width, height } = dimensions;\n    // Save the current context state\n    ctx.save();\n    // Set up the curve style\n    ctx.strokeStyle = \"#3b82f6\";\n    ctx.lineWidth = 2;\n    ctx.beginPath();\n    switch(curveType){\n        case \"polynomial\":\n            {\n                if (!parameters.polynomial) return;\n                const { coefficients } = parameters.polynomial;\n                let first = true;\n                for(let x = xMin; x <= xMax; x += 0.01){\n                    const y = (0,_curveCalculations__WEBPACK_IMPORTED_MODULE_0__.evaluatePolynomial)(x, coefficients);\n                    const px = (0,_canvasUtils__WEBPACK_IMPORTED_MODULE_1__.transformX)(x, dimensions, config);\n                    const py = (0,_canvasUtils__WEBPACK_IMPORTED_MODULE_1__.transformY)(y, dimensions, config);\n                    if (first) {\n                        ctx.moveTo(px, py);\n                        first = false;\n                    } else {\n                        ctx.lineTo(px, py);\n                    }\n                }\n                break;\n            }\n        case \"bezier\":\n            {\n                if (!parameters.bezier) return;\n                const { controlPoints } = parameters.bezier;\n                let first = true;\n                for(let t = 0; t <= 1; t += 0.01){\n                    const point = (0,_curveCalculations__WEBPACK_IMPORTED_MODULE_0__.evaluateBezier)(t, controlPoints);\n                    const px = (0,_canvasUtils__WEBPACK_IMPORTED_MODULE_1__.transformX)(point.x, dimensions, config);\n                    const py = (0,_canvasUtils__WEBPACK_IMPORTED_MODULE_1__.transformY)(point.y, dimensions, config);\n                    if (first) {\n                        ctx.moveTo(px, py);\n                        first = false;\n                    } else {\n                        ctx.lineTo(px, py);\n                    }\n                }\n                break;\n            }\n        case \"parametric\":\n            {\n                if (!parameters.parametric) return;\n                const { tMin, tMax, xFunction, yFunction, xScale, yScale } = parameters.parametric;\n                let first = true;\n                for(let t = tMin; t <= tMax; t += 0.01){\n                    const x = (0,_curveCalculations__WEBPACK_IMPORTED_MODULE_0__.evaluateParametricFunction)(t, xFunction, xScale);\n                    const y = (0,_curveCalculations__WEBPACK_IMPORTED_MODULE_0__.evaluateParametricFunction)(t, yFunction, yScale);\n                    const px = (0,_canvasUtils__WEBPACK_IMPORTED_MODULE_1__.transformX)(x, dimensions, config);\n                    const py = (0,_canvasUtils__WEBPACK_IMPORTED_MODULE_1__.transformY)(y, dimensions, config);\n                    if (first) {\n                        ctx.moveTo(px, py);\n                        first = false;\n                    } else {\n                        ctx.lineTo(px, py);\n                    }\n                }\n                break;\n            }\n        case \"trigonometric\":\n            {\n                if (!parameters.trigonometric) return;\n                const { amplitude, frequency, phase } = parameters.trigonometric;\n                let first = true;\n                for(let x = xMin; x <= xMax; x += 0.01){\n                    const y = amplitude * Math.sin(frequency * x + phase);\n                    const px = (0,_canvasUtils__WEBPACK_IMPORTED_MODULE_1__.transformX)(x, dimensions, config);\n                    const py = (0,_canvasUtils__WEBPACK_IMPORTED_MODULE_1__.transformY)(y, dimensions, config);\n                    if (first) {\n                        ctx.moveTo(px, py);\n                        first = false;\n                    } else {\n                        ctx.lineTo(px, py);\n                    }\n                }\n                break;\n            }\n        case \"exponential\":\n            {\n                if (!parameters.exponential) return;\n                const { base, coefficient, verticalShift } = parameters.exponential;\n                let first = true;\n                for(let x = xMin; x <= xMax; x += 0.01){\n                    const y = coefficient * Math.pow(base, x) + verticalShift;\n                    const px = (0,_canvasUtils__WEBPACK_IMPORTED_MODULE_1__.transformX)(x, dimensions, config);\n                    const py = (0,_canvasUtils__WEBPACK_IMPORTED_MODULE_1__.transformY)(y, dimensions, config);\n                    if (first) {\n                        ctx.moveTo(px, py);\n                        first = false;\n                    } else {\n                        ctx.lineTo(px, py);\n                    }\n                }\n                break;\n            }\n    }\n    ctx.stroke();\n    // Restore the context state\n    ctx.restore();\n}\nfunction drawControlPoints(ctx, points, config) {\n    // Save the current context state\n    ctx.save();\n    // Draw control points\n    ctx.fillStyle = \"#3b82f6\";\n    ctx.strokeStyle = \"#2563eb\";\n    ctx.lineWidth = 2;\n    points.forEach((point)=>{\n        const px = (0,_canvasUtils__WEBPACK_IMPORTED_MODULE_1__.transformX)(point.x, config.dimensions, config);\n        const py = (0,_canvasUtils__WEBPACK_IMPORTED_MODULE_1__.transformY)(point.y, config.dimensions, config);\n        ctx.beginPath();\n        ctx.arc(px, py, 4, 0, 2 * Math.PI);\n        ctx.fill();\n        ctx.stroke();\n    });\n    // Draw control lines\n    ctx.strokeStyle = \"#93c5fd\";\n    ctx.lineWidth = 1;\n    ctx.beginPath();\n    ctx.moveTo((0,_canvasUtils__WEBPACK_IMPORTED_MODULE_1__.transformX)(points[0].x, config.dimensions, config), (0,_canvasUtils__WEBPACK_IMPORTED_MODULE_1__.transformY)(points[0].y, config.dimensions, config));\n    for(let i = 1; i < points.length; i++){\n        ctx.lineTo((0,_canvasUtils__WEBPACK_IMPORTED_MODULE_1__.transformX)(points[i].x, config.dimensions, config), (0,_canvasUtils__WEBPACK_IMPORTED_MODULE_1__.transformY)(points[i].y, config.dimensions, config));\n    }\n    ctx.stroke();\n    // Restore the context state\n    ctx.restore();\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/lib/curveRendering.ts\n"));

/***/ })

});